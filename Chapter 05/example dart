import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: SignUpForm(),
      ),
    );
  }
}

class SignUpForm extends StatefulWidget {
  const SignUpForm({Key? key}) : super(key: key);

  @override
  State<SignUpForm> createState() => _SignUpFormState();
}

class _SignUpFormState extends State<SignUpForm> {
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _passwordConfirmationController =
      TextEditingController();

  final RegExp emailValidator = RegExp(
    r'^(([^<>()[]\.,;:s@"]+(.[^<>()[]\.,;:s@"]+)*)|(".+"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$',
    caseSensitive: false,
    multiLine: false,
  );

  bool _hidePassword = true;
  bool _hidePasswordConfirmation = true;

  @override
  Widget build(BuildContext context) {
    return Form(
      key: _formKey,
      child: Column(
        children: [
          TextFormField(
            controller: _nameController,
            decoration: const InputDecoration(
              hintText: 'Name',
            ),
            validator: (value) {
              if (value == null || value.isEmpty) {
                return 'Required';
              }

              if (value.trim().split(' ').length < 2) {
                return "Please enter your full, legal name.";
              }

              return null;
            },
          ),
          TextFormField(
            controller: _emailController,
            decoration: const InputDecoration(
              hintText: 'Email Address',
            ),
            validator: (value) {
              if (value == null || value.isEmpty) {
                return 'Required';
              }

              if (!emailValidator.hasMatch(value)) {
                return 'Invalid email address';
              }
              return null;
            },
          ),
          TextFormField(
            controller: _passwordController,
            decoration: InputDecoration(
              hintText: 'Password',
              suffixIcon: IconButton(
                onPressed: () {
                  setState(() {
                    _hidePassword = !_hidePassword;
                  });
                },
                icon: _hidePassword
                    ? const Icon(Icons.visibility)
                    : const Icon(Icons.visibility_off),
              ),
            ),
            validator: (value) {
              if (value == null || value.isEmpty) {
                return 'Required';
              }

              if (!value.contains(RegExp('[^A-Za-z0-9]'))) {
                return 'Special character required';
              }

              if (value.length < 8) {
                return "Password is too short";
              }

              return null;
            },
            obscureText: _hidePassword,
            autocorrect: false,
            enableIMEPersonalizedLearning: false,
            enableSuggestions: false,
          ),
          TextFormField(
            controller: _passwordConfirmationController,
            decoration: InputDecoration(
              hintText: 'Password (confirmation)',
              suffixIcon: IconButton(
                onPressed: () {
                  setState(() {
                    _hidePasswordConfirmation = !_hidePasswordConfirmation;
                  });
                },
                icon: _hidePasswordConfirmation
                    ? const Icon(Icons.visibility)
                    : const Icon(Icons.visibility_off),
              ),
            ),
            validator: (value) {
              if (value == null || value.isEmpty) {
                return 'Required';
              }

              if (value != _passwordController.text) {
                return "Passwords do not match";
              }

              return null;
            },
            obscureText: _hidePasswordConfirmation,
            autocorrect: false,
            enableIMEPersonalizedLearning: false,
            enableSuggestions: false,
          ),
          Padding(
            padding: const EdgeInsets.only(top: 20.0),
            child: ElevatedButton(
              onPressed: () {
                if (_formKey.currentState!.validate()) {
                  // Process the form data.
                  debugPrint('Name: ${_nameController.text}');
                  debugPrint('Email Address: ${_emailController.text}');
                  debugPrint('Password: ${_passwordController.text}');
                }
              },
              child: const Text('Sign Up'),
            ),
          ),
        ],
      ),
    );
  }
}
